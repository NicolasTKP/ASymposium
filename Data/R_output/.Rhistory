slice(rep(1:n(), each = 4)) %>%
mutate(WL_Duration = rep(1:4, times = nrow(.) / 4))
############################## Example Station #############################
rm(klang_table)
# Choose 3 station as example
klang_table <- cbind(Klang_Exposure, klang_WL_probability) %>%
filter(Station_ID %in% c("3014080_", "SELATMUARA", "PEKANMERU")) %>%
pivot_longer(cols = starts_with("P(X"),
names_to = "WL_Damage_Threshold_Multiplier",
values_to = "Probability_WL") %>%
mutate(WL_Damage_Threshold_Multiplier =
str_extract(WL_Damage_Threshold_Multiplier, "\\d+\\.\\d+"))%>%
# Add Water level duration (in days) column
slice(rep(1:n(), each = 4)) %>%
mutate(WL_Duration = rep(1:4, times = nrow(.) / 4)) %>%
mutate(
# Calculate damage ratio for each prob. tier
Ave_WL_Duration = mean(WL_Duration),
Ave_WL_Damage_Threshold_Multiplier = mean(WL_Damage_Threshold_Multiplier),
Damage_Ratio = (BaseRatio *
(WL_Duration/ Ave_WL_Duration)^k *
(WL_Damage_Threshold_Multiplier/Ave_WL_Damage_Threshold_Multiplier)^m))
# Choose 3 station as example
klang_table <- cbind(Klang_Exposure, klang_WL_probability) %>%
filter(Station_ID %in% c("3014080_", "SELATMUARA", "PEKANMERU")) %>%
pivot_longer(cols = starts_with("P(X"),
names_to = "WL_Damage_Threshold_Multiplier",
values_to = "Probability_WL") %>%
mutate(WL_Damage_Threshold_Multiplier = as.numeric(
str_extract(WL_Damage_Threshold_Multiplier, "\\d+\\.\\d+"))) %>%
# Add Water level duration (in days) column
slice(rep(1:n(), each = 4)) %>%
mutate(WL_Duration = rep(1:4, times = nrow(.) / 4)) %>%
mutate(
# Calculate damage ratio for each prob. tier
Ave_WL_Duration = mean(WL_Duration),
Ave_WL_Damage_Threshold_Multiplier = mean(WL_Damage_Threshold_Multiplier),
Damage_Ratio = (BaseRatio *
(WL_Duration/ Ave_WL_Duration)^k *
(WL_Damage_Threshold_Multiplier/Ave_WL_Damage_Threshold_Multiplier)^m),
# Calculate total asset at risk
Est_AssetAtRisk = Est_Insured_Unit * Est_B40_Ave_Price_Q1,
Expected_Damage = Est_AssetAtRisk * Damage_Ratio * Probability_WL) %>%
mutate(Probability_WL = round(Probability_WL,8),
Expected_Damage = round(as.numeric(format(Expected_Damage,4), scientific = F),2))
# Choose 3 station as example
klang_table <- cbind(Klang_Exposure, klang_WL_probability) %>%
filter(Station_ID %in% c("3014080_", "SELATMUARA", "PEKANMERU")) %>%
pivot_longer(cols = starts_with("P(X"),
names_to = "WL_Damage_Threshold_Multiplier",
values_to = "Probability_WL") %>%
mutate(WL_Damage_Threshold_Multiplier = as.numeric(
str_extract(WL_Damage_Threshold_Multiplier, "\\d+\\.\\d+"))) %>%
# Add Water level duration (in days) column
slice(rep(1:n(), each = 4)) %>%
mutate(WL_Duration = rep(1:4, times = nrow(.) / 4)) %>%
mutate(
# Calculate damage ratio for each prob. tier
Ave_WL_Duration = mean(WL_Duration),
Ave_WL_Damage_Threshold_Multiplier = mean(WL_Damage_Threshold_Multiplier),
Damage_Ratio = (
BaseRatio * (WL_Duration/ Ave_WL_Duration)^k *
(WL_Damage_Threshold_Multiplier/Ave_WL_Damage_Threshold_Multiplier)^m),
# Calculate total asset at risk
Est_AssetAtRisk = Est_Insured_Unit * Est_B40_Ave_Price_Q1,
Expected_Damage = Est_AssetAtRisk * Damage_Ratio * Probability_WL) %>%
mutate(Probability_WL = round(Probability_WL,8),
Expected_Damage = round(as.numeric(format(Expected_Damage,4), scientific = F),2))
View(klang_table)
# Choose 3 station as example
klang_loss_table <- cbind(Klang_Exposure, klang_WL_probability) %>%
filter(Station_ID %in% c("3014080_", "SELATMUARA", "PEKANMERU")) %>%
pivot_longer(cols = starts_with("P(X"),
names_to = "WL_Damage_Threshold_Multiplier",
values_to = "Probability_WL") %>%
mutate(WL_Damage_Threshold_Multiplier = as.numeric(
str_extract(WL_Damage_Threshold_Multiplier, "\\d+\\.\\d+"))) %>%
# Add Water level duration (in days) column
slice(rep(1:n(), each = 4)) %>%
mutate(WL_Duration = rep(1:4, times = nrow(.) / 4)) %>%
mutate(
# Calculate damage ratio for each prob. tier
Ave_WL_Duration = mean(WL_Duration),
Ave_WL_Damage_Threshold_Multiplier = mean(WL_Damage_Threshold_Multiplier),
Damage_Ratio = (
BaseRatio * (WL_Duration/ Ave_WL_Duration)^k *
(WL_Damage_Threshold_Multiplier/Ave_WL_Damage_Threshold_Multiplier)^m),
# Calculate total asset at risk
Est_AssetAtRisk = Est_Insured_Unit * Est_B40_Ave_Price_Q1,
Expected_Damage = Est_AssetAtRisk * Damage_Ratio * Probability_WL) %>%
mutate(Probability_WL = round(Probability_WL,8),
Expected_Damage = round(as.numeric(format(Expected_Damage,4), scientific = F),2))
############################## Write Table #############################
setwd(OutputFile)
View(klang_loss_table)
# Choose 3 station as example
klang_loss_table_2025 <- cbind(Klang_Exposure, klang_WL_probability) %>%
filter(Station_ID %in% c("3014080_", "SELATMUARA", "PEKANMERU")) %>%
pivot_longer(cols = starts_with("P(X"),
names_to = "WL_Damage_Threshold_Multiplier",
values_to = "Probability_WL") %>%
mutate(WL_Damage_Threshold_Multiplier = as.numeric(
str_extract(WL_Damage_Threshold_Multiplier, "\\d+\\.\\d+"))) %>%
# Add Water level duration (in days) column
slice(rep(1:n(), each = 4)) %>%
mutate(WL_Duration = rep(1:4, times = nrow(.) / 4)) %>%
mutate(
# Calculate damage ratio for each prob. tier
Ave_WL_Duration = mean(WL_Duration),
Ave_WL_Damage_Threshold_Multiplier = mean(WL_Damage_Threshold_Multiplier),
Damage_Ratio = (
BaseRatio * (WL_Duration/ Ave_WL_Duration)^k *
(WL_Damage_Threshold_Multiplier/Ave_WL_Damage_Threshold_Multiplier)^m),
# Calculate total asset at risk
Est_AssetAtRisk = Est_Insured_Unit * Est_B40_Ave_Price_Q1,
Expected_Damage = Est_AssetAtRisk * Damage_Ratio * Probability_WL) %>%
mutate(Probability_WL = round(Probability_WL,8),
Expected_Damage = round(as.numeric(format(Expected_Damage,4), scientific = F),2)) %>%
select(-c(State, District, Year))
View(klang_loss_table_2025)
# Choose 3 station as example
klang_loss_table_2025 <- cbind(Klang_Exposure, klang_WL_probability) %>%
filter(Station_ID %in% c("3014080_", "SELATMUARA", "PEKANMERU")) %>%
pivot_longer(cols = starts_with("P(X"),
names_to = "WL_Damage_Threshold_Multiplier",
values_to = "Probability_WL") %>%
mutate(WL_Damage_Threshold_Multiplier = as.numeric(
str_extract(WL_Damage_Threshold_Multiplier, "\\d+\\.\\d+"))) %>%
# Add Water level duration (in days) column
slice(rep(1:n(), each = 4)) %>%
mutate(WL_Duration = rep(1:4, times = nrow(.) / 4)) %>%
mutate(
# Calculate damage ratio for each prob. tier
Ave_WL_Duration = mean(WL_Duration),
Ave_WL_Damage_Threshold_Multiplier = mean(WL_Damage_Threshold_Multiplier),
Damage_Ratio = (
BaseRatio * (WL_Duration/ Ave_WL_Duration)^k *
(WL_Damage_Threshold_Multiplier/Ave_WL_Damage_Threshold_Multiplier)^m),
# Calculate total asset at risk
Est_AssetAtRisk = Est_Insured_Unit * Est_B40_Ave_Price_Q1,
Expected_Damage = Est_AssetAtRisk * Damage_Ratio * Probability_WL) %>%
mutate(Probability_WL = round(Probability_WL,8),
Expected_Damage = round(as.numeric(format(Expected_Damage,4), scientific = F),2)) %>%
select(-c(State, District, Year)) %>%
relocate(.before = district_living_quarters, Station_ID:Station_Name)
# Choose 3 station as example
klang_loss_table_2025 <- cbind(Klang_Exposure, klang_WL_probability) %>%
filter(Station_ID %in% c("3014080_", "SELATMUARA", "PEKANMERU")) %>%
pivot_longer(cols = starts_with("P(X"),
names_to = "WL_Damage_Threshold_Multiplier",
values_to = "Probability_WL") %>%
mutate(WL_Damage_Threshold_Multiplier = as.numeric(
str_extract(WL_Damage_Threshold_Multiplier, "\\d+\\.\\d+"))) %>%
# Add Water level duration (in days) column
slice(rep(1:n(), each = 4)) %>%
mutate(WL_Duration = rep(1:4, times = nrow(.) / 4)) %>%
mutate(
# Calculate damage ratio for each prob. tier
Ave_WL_Duration = mean(WL_Duration),
Ave_WL_Damage_Threshold_Multiplier = mean(WL_Damage_Threshold_Multiplier),
Damage_Ratio = (
BaseRatio * (WL_Duration/ Ave_WL_Duration)^k *
(WL_Damage_Threshold_Multiplier/Ave_WL_Damage_Threshold_Multiplier)^m),
# Calculate total asset at risk
Est_AssetAtRisk = Est_Insured_Unit * Est_B40_Ave_Price_Q1,
Expected_Damage = Est_AssetAtRisk * Damage_Ratio * Probability_WL) %>%
mutate(Probability_WL = round(Probability_WL,8),
Expected_Damage = round(as.numeric(format(Expected_Damage,4), scientific = F),2)) %>%
select(-c(State, District, Year)) %>%
relocate(.before = District_living_quarter, Station_ID:Station_Name)
# Choose 3 station as example
klang_loss <- cbind(Klang_Exposure, klang_WL_probability) %>%
filter(Station_ID %in% c("3014080_", "SELATMUARA", "PEKANMERU")) %>%
pivot_longer(cols = starts_with("P(X"),
names_to = "WL_Damage_Threshold_Multiplier",
values_to = "Probability_WL") %>%
mutate(WL_Damage_Threshold_Multiplier = as.numeric(
str_extract(WL_Damage_Threshold_Multiplier, "\\d+\\.\\d+"))) %>%
# Add Water level duration (in days) column
slice(rep(1:n(), each = 4)) %>%
mutate(WL_Duration = rep(1:4, times = nrow(.) / 4)) %>%
mutate(
# Calculate damage ratio for each prob. tier
Ave_WL_Duration = mean(WL_Duration),
Ave_WL_Damage_Threshold_Multiplier = mean(WL_Damage_Threshold_Multiplier),
Damage_Ratio = (
BaseRatio * (WL_Duration/ Ave_WL_Duration)^k *
(WL_Damage_Threshold_Multiplier/Ave_WL_Damage_Threshold_Multiplier)^m),
# Calculate total asset at risk
Est_AssetAtRisk = Est_Insured_Unit * Est_B40_Ave_Price_Q1,
Expected_Damage = Est_AssetAtRisk * Damage_Ratio * Probability_WL) %>%
mutate(Probability_WL = round(Probability_WL,8),
Expected_Damage = round(as.numeric(format(Expected_Damage,4), scientific = F),2)) %>%
select(-c(State, District, Year)) %>%
relocate(.before = District_living_quarter, Station_ID:Station_Name)
View(klang_loss)
############################## EAD for each Station #############################
Expected_Loss =  klang_loss %>%
group_by(Station_ID, Station_Name, `Risk Level`) %>%
summarise(Expected_Annual_Damage = sum(Expected_Damage)) %>%
bind_rows(
tibble(Station_ID = "Total",
Expected_Annual_Damage = sum(klang_final_table$Expected_Annual_Damage, na.rm = TRUE)))
############################## EAD for each Station #############################
Expected_Loss =  klang_loss %>%
group_by(Station_ID, Station_Name, `Risk Level`) %>%
summarise(Expected_Annual_Damage = sum(Expected_Damage)) %>%
bind_rows(
tibble(Station_ID = "Total",
Expected_Annual_Damage = sum(klang_loss$Expected_Annual_Damage, na.rm = TRUE)))
View(klang_loss)
# Choose 3 station as example
klang_loss <- cbind(Klang_Exposure, klang_WL_probability) %>%
filter(Station_ID %in% c("3014080_", "SELATMUARA", "PEKANMERU")) %>%
pivot_longer(cols = starts_with("P(X"),
names_to = "WL_Damage_Threshold_Multiplier",
values_to = "Probability_WL") %>%
mutate(WL_Damage_Threshold_Multiplier = as.numeric(
str_extract(WL_Damage_Threshold_Multiplier, "\\d+\\.\\d+"))) %>%
# Add Water level duration (in days) column
slice(rep(1:n(), each = 4)) %>%
mutate(WL_Duration = rep(1:4, times = nrow(.) / 4)) %>%
mutate(
# Calculate damage ratio for each prob. tier
Ave_WL_Duration = mean(WL_Duration),
Ave_WL_Damage_Threshold_Multiplier = mean(WL_Damage_Threshold_Multiplier),
Damage_Ratio = (
BaseRatio * (WL_Duration/ Ave_WL_Duration)^k *
(WL_Damage_Threshold_Multiplier/Ave_WL_Damage_Threshold_Multiplier)^m),
# Calculate total asset at risk
Est_AssetAtRisk = Est_Insured_Unit * Est_B40_Ave_Price_Q1,
Expected_Damage_per_Unit = Est_AssetAtRisk * Damage_Ratio * Probability_WL,
Total_Expected_Damage = Est_B40_Ave_Price_Q1 *  Damage_Ratio * Probability_WL) %>%
mutate(Probability_WL = round(Probability_WL,8),
Expected_Damage = round(as.numeric(format(Expected_Damage,4), scientific = F),2)) %>%
select(-c(State, District, Year)) %>%
relocate(.before = District_living_quarter, Station_ID:Station_Name)
# Choose 3 station as example
klang_loss <- cbind(Klang_Exposure, klang_WL_probability) %>%
filter(Station_ID %in% c("3014080_", "SELATMUARA", "PEKANMERU")) %>%
pivot_longer(cols = starts_with("P(X"),
names_to = "WL_Damage_Threshold_Multiplier",
values_to = "Probability_WL") %>%
mutate(WL_Damage_Threshold_Multiplier = as.numeric(
str_extract(WL_Damage_Threshold_Multiplier, "\\d+\\.\\d+"))) %>%
# Add Water level duration (in days) column
slice(rep(1:n(), each = 4)) %>%
mutate(WL_Duration = rep(1:4, times = nrow(.) / 4)) %>%
mutate(
# Calculate damage ratio for each prob. tier
Ave_WL_Duration = mean(WL_Duration),
Ave_WL_Damage_Threshold_Multiplier = mean(WL_Damage_Threshold_Multiplier),
Damage_Ratio = (
BaseRatio * (WL_Duration/ Ave_WL_Duration)^k *
(WL_Damage_Threshold_Multiplier/Ave_WL_Damage_Threshold_Multiplier)^m),
# Calculate total asset at risk
Est_AssetAtRisk = Est_Insured_Unit * Est_B40_Ave_Price_Q1,
Expected_Damage_per_Unit = Est_AssetAtRisk * Damage_Ratio * Probability_WL,
Total_Expected_Damage = Est_B40_Ave_Price_Q1 *  Damage_Ratio * Probability_WL) %>%
mutate(Probability_WL = round(Probability_WL,8),
Expected_Damage = round(as.numeric(format(Expected_Damage,4), scientific = F),2)) %>%
select(-c(State, District, Year)) %>%
relocate(.before = District_living_quarter, Station_ID:Station_Name)
# Choose 3 station as example
klang_loss <- cbind(Klang_Exposure, klang_WL_probability) %>%
filter(Station_ID %in% c("3014080_", "SELATMUARA", "PEKANMERU")) %>%
pivot_longer(cols = starts_with("P(X"),
names_to = "WL_Damage_Threshold_Multiplier",
values_to = "Probability_WL") %>%
mutate(WL_Damage_Threshold_Multiplier = as.numeric(
str_extract(WL_Damage_Threshold_Multiplier, "\\d+\\.\\d+"))) %>%
# Add Water level duration (in days) column
slice(rep(1:n(), each = 4)) %>%
mutate(WL_Duration = rep(1:4, times = nrow(.) / 4)) %>%
mutate(
# Calculate damage ratio for each prob. tier
Ave_WL_Duration = mean(WL_Duration),
Ave_WL_Damage_Threshold_Multiplier = mean(WL_Damage_Threshold_Multiplier),
Damage_Ratio = (
BaseRatio * (WL_Duration/ Ave_WL_Duration)^k *
(WL_Damage_Threshold_Multiplier/Ave_WL_Damage_Threshold_Multiplier)^m),
# Calculate total asset at risk
Est_AssetAtRisk = Est_Insured_Unit * Est_B40_Ave_Price_Q1,
Expected_Damage_per_Unit = Est_AssetAtRisk * Damage_Ratio * Probability_WL,
Total_Expected_Damage = Est_B40_Ave_Price_Q1 *  Damage_Ratio * Probability_WL) %>%
mutate(Probability_WL = round(Probability_WL,8),
Total_Expected_Damage = round(as.numeric(format(Total_Expected_Damage,4), scientific = F),2)) %>%
select(-c(State, District, Year)) %>%
relocate(.before = District_living_quarter, Station_ID:Station_Name)
# Choose 3 station as example
klang_loss <- cbind(Klang_Exposure, klang_WL_probability) %>%
filter(Station_ID %in% c("3014080_", "SELATMUARA", "PEKANMERU")) %>%
pivot_longer(cols = starts_with("P(X"),
names_to = "WL_Damage_Threshold_Multiplier",
values_to = "Probability_WL") %>%
mutate(WL_Damage_Threshold_Multiplier = as.numeric(
str_extract(WL_Damage_Threshold_Multiplier, "\\d+\\.\\d+"))) %>%
# Add Water level duration (in days) column
slice(rep(1:n(), each = 4)) %>%
mutate(WL_Duration = rep(1:4, times = nrow(.) / 4)) %>%
mutate(
# Calculate damage ratio for each prob. tier
Ave_WL_Duration = mean(WL_Duration),
Ave_WL_Damage_Threshold_Multiplier = mean(WL_Damage_Threshold_Multiplier),
Damage_Ratio = (
BaseRatio * (WL_Duration/ Ave_WL_Duration)^k *
(WL_Damage_Threshold_Multiplier/Ave_WL_Damage_Threshold_Multiplier)^m),
# Calculate total asset at risk
Est_AssetAtRisk = Est_Insured_Unit * Est_B40_Ave_Price_Q1,
Total_Expected_Damage = Est_AssetAtRisk * Damage_Ratio * Probability_WL,
Expected_Damage_per_Unit = Est_B40_Ave_Price_Q1 *  Damage_Ratio * Probability_WL) %>%
mutate(Probability_WL = round(Probability_WL,8),
Total_Expected_Damage = round(as.numeric(format(Total_Expected_Damage,4), scientific = F),2)) %>%
select(-c(State, District, Year)) %>%
relocate(.before = District_living_quarter, Station_ID:Station_Name)
# Choose 3 station as example
klang_loss <- cbind(Klang_Exposure, klang_WL_probability) %>%
filter(Station_ID %in% c("3014080_", "SELATMUARA", "PEKANMERU")) %>%
pivot_longer(cols = starts_with("P(X"),
names_to = "WL_Damage_Threshold_Multiplier",
values_to = "Probability_WL") %>%
mutate(WL_Damage_Threshold_Multiplier = as.numeric(
str_extract(WL_Damage_Threshold_Multiplier, "\\d+\\.\\d+"))) %>%
# Add Water level duration (in days) column
slice(rep(1:n(), each = 4)) %>%
mutate(WL_Duration = rep(1:4, times = nrow(.) / 4)) %>%
mutate(
# Calculate damage ratio for each prob. tier
Ave_WL_Duration = mean(WL_Duration),
Ave_WL_Damage_Threshold_Multiplier = mean(WL_Damage_Threshold_Multiplier),
Damage_Ratio = (
BaseRatio * (WL_Duration/ Ave_WL_Duration)^k *
(WL_Damage_Threshold_Multiplier/Ave_WL_Damage_Threshold_Multiplier)^m),
# Calculate total asset at risk
Est_AssetAtRisk = Est_Insured_Unit * Est_B40_Ave_Price_Q1,
Total_Expected_Damage = Est_AssetAtRisk * Damage_Ratio * Probability_WL,
Expected_Damage_per_Unit = Est_B40_Ave_Price_Q1 *  Damage_Ratio * Probability_WL) %>%
mutate(Probability_WL = round(Probability_WL,8),
Expected_Damage_per_Unit = round(as.numeric(format(Expected_Damage_per_Unit,4), scientific = F),2)) %>%
select(-c(State, District, Year)) %>%
relocate(.before = District_living_quarter, Station_ID:Station_Name)
# Choose 3 station as example
klang_loss <- cbind(Klang_Exposure, klang_WL_probability) %>%
filter(Station_ID %in% c("3014080_", "SELATMUARA", "PEKANMERU")) %>%
pivot_longer(cols = starts_with("P(X"),
names_to = "WL_Damage_Threshold_Multiplier",
values_to = "Probability_WL") %>%
mutate(WL_Damage_Threshold_Multiplier = as.numeric(
str_extract(WL_Damage_Threshold_Multiplier, "\\d+\\.\\d+"))) %>%
# Add Water level duration (in days) column
slice(rep(1:n(), each = 4)) %>%
mutate(WL_Duration = rep(1:4, times = nrow(.) / 4)) %>%
mutate(
# Calculate damage ratio for each prob. tier
Ave_WL_Duration = mean(WL_Duration),
Ave_WL_Damage_Threshold_Multiplier = mean(WL_Damage_Threshold_Multiplier),
Damage_Ratio = (
BaseRatio * (WL_Duration/ Ave_WL_Duration)^k *
(WL_Damage_Threshold_Multiplier/Ave_WL_Damage_Threshold_Multiplier)^m),
# Calculate total asset at risk
Est_AssetAtRisk = Est_Insured_Unit * Est_B40_Ave_Price_Q1,
Total_Expected_Damage = Est_AssetAtRisk * Damage_Ratio * Probability_WL,
Expected_Damage_per_Unit = Est_B40_Ave_Price_Q1 *  Damage_Ratio * Probability_WL) %>%
mutate(Probability_WL = round(Probability_WL,8),
Total_Expected_Damage = round(as.numeric(format(Total_Expected_Damage,4), scientific = F),2),
Expected_Damage_per_Unit = round(as.numeric(format(Expected_Damage_per_Unit,4), scientific = F),2)) %>%
select(-c(State, District, Year)) %>%
relocate(.before = District_living_quarter, Station_ID:Station_Name)
View(klang_loss)
############################## EAD for each Station #############################
Expected_Loss =  klang_loss %>%
group_by(Station_ID, Station_Name, `Risk Level`) %>%
summarise(Total_Expected_Damage = sum(Total_Expected_Damage)) %>%
bind_rows(
tibble(Station_ID = "Total",
Expected_Annual_Damage = sum(klang_final_table$Expected_Annual_Damage, na.rm = TRUE)))
############################## EAD for each Station #############################
Expected_Loss =  klang_loss %>%
group_by(Station_ID, Station_Name, `Risk Level`) %>%
summarise(Total_Expected_Damage = sum(Total_Expected_Damage))
View(klang_loss)
############################## EAD for each Station #############################
Expected_Loss =  klang_loss %>%
group_by(Station_ID, Station_Name, `Risk Level`) %>%
summarise(Total_Expected_Damage = sum(Total_Expected_Damage))
View(Expected_Loss)
############################## EAD for each Station #############################
Expected_Loss =  klang_loss %>%
group_by(Station_ID, Station_Name, `Risk Level`) %>%
summarise(Total_Expected_Damage = sum(Total_Expected_Damage))
View(klang_loss)
############################## EAD for each Station #############################
Expected_Loss <- klang_loss %>%
group_by(Station_ID, Station_Name, `Risk Level`) %>%
summarise(Total_Expected_Damage = sum(Total_Expected_Damage, na.rm = TRUE)) %>%
ungroup()
############################## EAD for each Station #############################
Expected_Loss <- klang_loss %>%
group_by(Station_ID, Station_Name, `Risk Level`) %>%
summarise(Total_Expected_Damage = sum(Total_Expected_Damage, na.rm = TRUE)) %>%
ungroup()
View(Expected_Loss)
View(klang_loss)
names()
names(klang_loss)
############################## EAD for each Station #############################
Expected_Loss <- klang_loss %>%
group_by(Station_ID, Station_Name, `Risk Level`) %>%
summarise(Total_Expected_Damage = sum(Total_Expected_Damage, na.rm = TRUE)) %>%
ungroup()
View(Expected_Loss)
str(klang_loss)
############################## EAD for each Station #############################
Expected_Loss = klang_loss %>%
group_by(Station_ID, Station_Name, Risk_Level) %>%
summarise(Total_Expected_Damage = sum(Total_Expected_Damage, na.rm = TRUE))
############################## EAD for each Station #############################
Expected_Loss = klang_loss %>%
group_by(Station_ID, Station_Name, `Risk Level`) %>%
summarise(Total_Expected_Damage = sum(Total_Expected_Damage, na.rm = TRUE))
View(Expected_Loss)
klang_loss %>%
summarise(
n_station_id = n_distinct(Station_ID),
n_station_name = n_distinct(Station_Name),
n_risk_level = n_distinct(`Risk Level`)
)
View(klang_loss)
klang_loss$Station_ID
############################## EAD for each Station #############################
Expected_Loss = klang_loss %>%
group_by(Station_ID, Station_Name, `Risk Level`) %>%
summarise(Total_Expected_Damage = sum(Total_Expected_Damage, na.rm = TRUE)) %>%
as.tibble()
############################## EAD for each Station #############################
Expected_Loss = klang_loss %>%
group_by(Station_ID, Station_Name, `Risk Level`) %>%
summarise(Total_Expected_Damage = sum(Total_Expected_Damage, na.rm = TRUE))
############################## EAD for each Station #############################
Expected_Loss = klang_loss %>%
group_by(Station_Name, `Risk Level`) %>%
summarise(Total_Expected_Damage = sum(Total_Expected_Damage, na.rm = TRUE))
############################## EAD for each Station #############################
Expected_Loss = klang_loss %>%
group_by(Station_ID, Station_Name, `Risk Level`) %>%
summarise(Total_Expected_Damage = sum(Total_Expected_Damage, na.rm = TRUE))
Expected_Loss
klang_loss %>%
distinct(Station_ID, Station_Name, `Risk Level`)
############################## EAD for each Station #############################
Expected_Loss <- klang_loss %>%
group_by(Station_ID, Station_Name, `Risk Level`) %>%
summarise(Total_Expected_Damage = sum(Total_Expected_Damage, na.rm = TRUE)) %>%
ungroup()
############################## EAD for each Station #############################
Expected_Loss <- klang_loss %>%
group_by(Station_ID, Station_Name, `Risk Level`) %>%
summarise()
############################## EAD for each Station #############################
Expected_Loss <- klang_loss %>%
group_by(Station_ID, Station_Name, `Risk Level`) %>%
summarise(.)
############################## EAD for each Station #############################
klang_loss %>%
select(Station_ID, Station_Name, `Risk Level`, Total_Expected_Damage) %>%
group_by(Station_ID, Station_Name, `Risk Level`) %>%
summarise(Total_Damage = sum(Total_Expected_Damage, na.rm = TRUE), .groups = "drop")
# Choose 3 station as example
klang_loss <- cbind(Klang_Exposure, klang_WL_probability) %>%
filter(Station_ID %in% c("3014080_", "SELATMUARA", "PEKANMERU")) %>%
pivot_longer(cols = starts_with("P(X"),
names_to = "WL_Damage_Threshold_Multiplier",
values_to = "Probability_WL") %>%
mutate(WL_Damage_Threshold_Multiplier = as.numeric(
str_extract(WL_Damage_Threshold_Multiplier, "\\d+\\.\\d+"))) %>%
# Add Water level duration (in days) column
slice(rep(1:n(), each = 4)) %>%
mutate(WL_Duration = rep(1:4, times = nrow(.) / 4)) %>%
mutate(
# Calculate damage ratio for each prob. tier
Ave_WL_Duration = mean(WL_Duration),
Ave_WL_Damage_Threshold_Multiplier = mean(WL_Damage_Threshold_Multiplier),
Damage_Ratio = (
BaseRatio * (WL_Duration/ Ave_WL_Duration)^k *
(WL_Damage_Threshold_Multiplier/Ave_WL_Damage_Threshold_Multiplier)^m),
# Calculate total asset at risk
Est_AssetAtRisk = Est_Insured_Unit * Est_B40_Ave_Price_Q1,
Total_Expected_Damage = Est_AssetAtRisk * Damage_Ratio * Probability_WL,
Expected_Damage_per_Unit = Est_B40_Ave_Price_Q1 *  Damage_Ratio * Probability_WL) %>%
mutate(Probability_WL = round(Probability_WL,8),
Total_Expected_Damage = round(as.numeric(format(Total_Expected_Damage,4), scientific = F),2),
Expected_Damage_per_Unit = round(as.numeric(format(Expected_Damage_per_Unit,4), scientific = F),2)) %>%
select(-c(State, District, Year)) %>%
relocate(.before = District_living_quarter, Station_ID:Station_Name)
View(klang_loss)
############################## EAD for each Station #############################
Expected_Loss = klang_loss %>%
select(Station_ID, Station_Name, `Risk Level`, Total_Expected_Damage) %>%
group_by(Station_ID, Station_Name, `Risk Level`) %>%
summarise(Total_Damage = sum(Total_Expected_Damage, na.rm = TRUE), .groups = "drop")
unique(klang_loss$Station_ID)
unique(klang_loss$Station_Name)
unique(klang_loss$`Risk Level`)
############################## EAD for each Station #############################
Expected_Loss <- klang_loss %>%
select(Station_ID, Station_Name, `Risk Level`, Total_Expected_Damage) %>%
group_by(Station_ID, Station_Name, `Risk Level`) %>%
summarise(
Total_Expected_Damage = sum(Total_Expected_Damage, na.rm = TRUE),
.groups = "drop"
)
View(Expected_Loss)
